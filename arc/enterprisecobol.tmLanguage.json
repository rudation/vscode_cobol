{
	"$schema" : "https://raw.githubusercontent.com/spgennard/vscode_cobol/main/schemas/tmlanguage.json",
	"name": "Enterprise COBOL for z/OS",
	"fileTypes": [],
	"patterns": [
		{
			"match": "(^[ \\*][ \\*][ \\*][ \\*][ \\*][ \\*])(\\*.*$)",
			"name": "comment.line.cobol.fixed"
		},
		{
			"match": "(^[0-9\\s][0-9\\s][0-9\\s][0-9\\s][0-9\\s][0-9\\s])(\\*.*$)",
			"captures": {
				"1": {
					"name": "constant.numeric.cobol"
				},
				"2": {
					"name": "comment.line.cobol.fixed"
				}
			}
		},
		{
			"match": "(^[0-9a-zA-Z\\s][0-9a-zA-Z\\s][0-9a-zA-Z\\s][0-9a-zA-Z\\s][0-9a-zA-Z\\s][0-9a-zA-Z\\s])(\\*.*$)",
			"captures": {
				"1": {
					"name": "meta.symbol.cobol"
				},
				"2": {
					"name": "comment.line.cobol.fixed"
				}
			}
		},
		{
			"match": "(?<=(\\(|\\[))((\\-\\+)*[0-9 ,\\.\\+\\-\\*\\/]+)(?=(\\)|\\]))",
			"name": "constant.numeric.cobol",
			"captures": {
				"1": {
					"name": "keyword.bracket.cobol"
				},
				"2": {
					"name": "constant.numeric.cobol"
				},
				"3": {
					"name": "keyword.bracket.cobol"
				}
			},
			"comment": "simple numerics in () and []"
		},
		{
			"match": "(\\-|\\+)?((([0-9]+(\\.[0-9]+))|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?(?=\\s|\\.$|,|\\))",
			"name": "constant.numeric.cobol"
		},
		{
			"match": "(\\-|\\+)?([0-9]+)(?=\\s|\\.$|,|\\))",
			"name": "constant.numeric.cobol"
		},
		{
			"match": "(?<![-_])(?i:true|false|null|nulls|self|super)(?=\\s|\\.|\\)|$)",
			"name": "constant.language.cobol"
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "(\"|$)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.double.cobol"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "('|$)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.single.cobol"
		},
		{
			"begin": "[zZ]\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "(\"|$)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.double.cobol"
		},
		{
			"begin": "[zZ]'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.single.cobol"
		},
		{
			"begin": "[nN]\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "(\"|$)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.double.cobol"
		},
		{
			"begin": "[nN]'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.cobol"
				}
			},
			"name": "string.quoted.single.cobol"
		},
		{
			"match": "(?i:id\\s+division|identification\\s+division|identification|id|entry|factory|method|environment\\s+division|environment|configuration\\s+section|configuration|decimal-point\\s+is|special-names|currency\\s+sign|currency|repository|input-output\\s+section|input-output|file\\s+section|file-control|select|optional|i-o-control|data\\s+division|working-storage\\s+section|working-storage|section|local-storage|linkage\\s+section|linkage|fd|rd|cd|sd|procedure\\s+division|procedure|division|references|debugging|end\\s+declaratives|declaratives|end\\s+factory|size|national-edited|national)(?=\\s|\\.)",
			"name": "keyword.identifiers.cobol"
		},
		{
			"match": "(?i:method-id|class-id|program-id|inherits)(?=\\s|\\.)",
			"name": "keyword.verbs.cobol"
		},
		{
			"match": "(?<![-_])(?i:end\\s+class|end\\s+method|end\\s+object|end\\s+program|as|stop\\s+run|stop)(?=\\s|\\.|,|\\))",
			"name": "keyword.identifiers.cobol"
		},
		{
			"match": "(?<![-_])(?i:select|use|thru|varying|giving|otherwise|remainder|tallying|through|until|execute|returning|using)(?=\\s)",
			"name": "keyword.otherverbs.cobol"
		},
		{
			"match": "(?<![-_])(?i:assign|apply|every|rerun|area|reserve|areas|write-only|external|organization|indexed|line|sequential|access|dynamic|relative|label|block|contains|standard|records|record\\s+key|multiple|record|is|alternate|duplicates|reel|removal|rewind|unit|tape|recording\\s+mode|mode|random|code-set)(?=\\s|\\.)",
			"name": "keyword.identifiers.cobol"
		},
		{
			"match": "(?<![-_])(?i:end-add|end-compute|end-delete|end-divide|end-multiply|end-of-page|end-read|end-return|end-rewrite|end-search|end-start|end-string|end-subtract|end-unstring|end-write|program|class)(?=\\s|\\.)",
			"name": "keyword.verbs.cobol"
		},
		{
			"match": "(?<![-_])(?:by value|by reference|by content|property-value)(?=\\s|\\.)",
			"name": "keyword.other.cobol"
		},
		{
			"match": "(?<![-_])(?i:footing|next|of|input|output|i-o|reversed|extend|file|error|exception|overflow|off|on|proceed|procedures|procedure|through|eop|to|for|giving|into|by|remainder|also|numeric|depending|converting|replacing|test|after|before|all|default|leading|first|recursive|initialized|global|initial|common|reference|content|are|renames|volatile|values|omitted|bottom|top|value|ascending|descending|key|invalid|with|no|advancing|page|up|down|lock|length|delimited|count|delimiter|redefines|from\\s+console|from\\s+day\\s+yyyyddd|from\\s+day|from\\s+time|from\\s+day-of-week|from\\s+day\\s+yyyyddd|from\\s+date\\s+yyyymmdd|from\\s+date|from|status|upon|lines|columns|linage|position|in|at|end)(?=\\s|\\.|,)",
			"name": "keyword.identifers.cobol"
		},
		{
			"match": "(?<![-_])(?i:string)(?=\\s+value|\\.)",
			"name": "storage.type.cobol"
		},
		{
			"match": "(?<![-_])(?i:characters|character|comma|object\\+sreference|object)(?=\\s|\\.|,|\\]|\\[)",
			"name": "storage.type.cobol"
		},
		{
			"match": "(?<![-_])(?i:if|else|end-if|exit\\s+program|exit\\s+method|evaluate|end-evaluate|perform|end-perform|when\\s+other|when|continue|call|end-call|invoke|end-invoke|go\\s+to|stop\\s+run|goback)(?=\\s|\\.|$)",
			"name": "keyword.control.cobol"
		},
		{
			"match": "(?<![-_])(?i:accept|add|address|allocate|alter|cancel|chain|close|compute|continue|delete|display|divide|enter|exit|free|initialize\\sonly|initialize|inspect|merge|set|move|multiply|open|read|receive|release|return|rewrite|search|start|subtract|then|string|unstring|write|next|statement|sentence)(?=\\s|\\.|$)",
			"name": "keyword.verbs.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBxXpPnNzZ/,.]*\\([0-9]*\\)[vV][-+sS\\*$09aAbBxXpPnNzZ/,\\.]*\\([0-9]*\\)[-|+]",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBxXpPnNzZ/,.]*\\([0-9]*\\)[vV][-+sS\\*$09aAbBxXpPnNzZ/,\\.]*\\([0-9]*\\)",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBxXpPnNzZ/,.]*\\([0-9]*\\)[vV\\.][-+s\\*$09aAbBsSnNxXzZ/,]*[0-9]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBsSnpPNxXzZ/,.]*\\([0-9]*\\)[Vv\\.][-+s\\*0$9aAbBsSnNxpPXzZ/,]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBsSnpPNxXzZ/,.]*\\([0-9]*\\)[-+s\\*0$9aAbBsSnNxpPXzZ/,]*[Vv\\.][-+s\\*0$9aAbBsSnNxpPXzZ/,]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBsSnpPNxXzZ/,.]*\\([0-9]*\\)[-+s\\*0$9aAbBsSnNxpPXzZ/,]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+sS\\*$09aAbBsSnpNNxXzZ/,.]*\\([0-9]*\\)",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[sS]?[9aAbBsSnNxXzZ]*[Vv][9aAxbXzZ]*\\([0-9]*\\)",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[sS]?[9aAbBsSnNxXzZ]*[Vv][9aAxbXzZ]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:picture\\s+is|picture|pic\\s+is|pic)\\s+[-+\\*$9aAbBsSnpPNxXzZ/,.vV]*",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "(?<![-_])(?i:computational-1|comp-1|computational-2|comp-2|computational-3|comp-3|computational-4|comp-4|computational-5|comp-5|packed-decimal|index|comp|computational|usage\\s+is\\s+display|usage\\s+display|display-1|binary|function-pointer|program-pointer|procedure-pointer|pointer|occurs|any|times|blank|usage\\s+is|usage|justified|just|right|signed|trailing|leading|separate|sign|sync|synchronized|left|right|group-usage)(?=\\s|\\.)",
			"name": "storage.type.picture.cobol"
		},
		{
			"match": "\\s+(?i:=|<|>|<=|>=|<>|\\+|\\-|\\*|\\/|and|or|equal|greater|less)(?=\\s+|\\.|$)",
			"name": "keyword.operator.cobol"
		},
		{
			"match": "(?i:at\\s+end)",
			"name": "keyword.verbs.cobol"
		},
		{
			"match": "(?i:not)(?=\\s+|\\.|$)",
			"name": "keyword.operator.cobol"
		},
		{
			"match": "(?!-)(?i:installation|author|source-computer|object-computer|date-written|date-compiled|memory|words|modules)(?=\\s|\\.)",
			"name": "keyword.verbs.cobol"
		},
		{
			"match": "^\\*.*$",
			"name": "comment.line.cobol.fixed"
		},
		{
			"begin": "(?i:(cbl|process)\\s+)",
			"name": "keyword.verb.cobol",
			"patterns": [
				{
					"match": "(\\w+)(\\()?(\\w+)?(\\))?(\\s)",
					"captures": {
						"1": {
							"name": "keyword.other.cobol"
						},
						"2": {
							"name": "comment.line.cobol.fixed"
						},
						"3": {
							"name": "meta.symbol.cobol"
						},
						"4": {
							"name": "comment.line.cobol.fixed"
						}
					}
				}
			],
			"end": "(\n)",
			"endCaptures": {
				"1": {
					"name": "comment.line.cobol.fixed"
				}
			}
		},
		{
			"match": "([nN][xX]|[hHxX])'\\h*'",
			"name": "constant.numeric.integer.hexadecimal.cobol"
		},
		{
			"match": "([nN][xX]|[hHxX])'.*'",
			"name": "invalid.illegal.hexadecimal.cobol"
		},
		{
			"match": "([nN][xX]|[hHxX])\"\\h*\"",
			"name": "constant.numeric.integer.hexadecimal.cobol"
		},
		{
			"match": "([nN][xX]|[hHxX])\".*\"",
			"name": "invalid.illegal.hexadecimal.cobol"
		},
		{
			"match": "((?<![-_])((?i:installation|author|source-computer|object-computer|date-written|security|date-compiled)\\.)(.*))",
			"captures": {
				"1": {
					"name": "keyword.verb.cobol"
				},
				"2": {
					"name": "keyword.verb.cobol"
				},
				"3": {
					"name": "comment.line.cobol.ignored"
				}
			}
		},
		{
			"match": "(?<![-_])(?i:zeroes|than|alphabetic|alphabetic-upper|alphabetic-lower|alphanumeric|alphanumeric-edited|numeric-edited|zeros|zero|spaces|space|quotes|quote|low-values|low-value|positive|negative|segment-limit|collating\\s+sequence|collating|corresponding|corr|egcs|dbcs|kanji)(?=\\s+|\\.|,|\\))",
			"name": "constant.language.figurative.cobol"
		},
		{
			"begin": "(?mi:(exec\\s+sql))",
			"beginCaptures": {
				"1": {
					"name": "meta.symbol.cobol.db2"
				}
			},
			"patterns": [
				{
					"match": "(?i:allocate|alter|associate|call|close|comment|commit|connect|create|declare|delete|describe|drop|exchange|execute|explain|fetch|free|grant|hold|include|insert|label|lock|merge|open|prepare|refresh|release|rename|revoke|rollback|savepoint|select|set|signal|truncate|update|values|whenever)",
					"name": "keyword.verb.db2"
				},
				{
					"match": "(\\:([0-9a-zA-Z\\-_])*)",
					"name": "variable.cobol"
				}
			],
			"end": "(?i:end\\-exec)",
			"endCaptures": {
				"0": {
					"name": "meta.symbol.cobol.db2"
				}
			}
		},
		{
			"begin": "(?mi:(exec\\s+cics))",
			"beginCaptures": {
				"1": {
					"name": "meta.symbol.cobol.cics string.quoted.cobol.cics"
				}
			},
			"patterns": [
				{
					"match": "(?i:abend|acquire|add|allocate|asktime|assign|bif|build|cancel|change|check|connect|converse|converttime|define|delay|delete|deleteq|deq|document|dump|endbr|endbrowse|enq|enter|extract|force|formattime|free|freemain|freemain64|gds|get|getmain|getmain64|getnext|get64|handle|ignore|inquire|invoke|issue|journal|link|load|monitor|move|point|pop|post|purge|push|put|put64|query|read|readnext|readprev|readq|receive|release|remove|reset|resetbr|resume|retrieve|return|rewind|rewrite|route|run|send|signal|signoff|signon|soapfault|spoolclose|spoolopen|spoolread|spoolwrite|start|startbr|startbrowse|suspend|syncpoint|test|transform|unlock|update|verify|wait|waitcics|web|write|writeq|wsacontext|wsaepr|xctl)",
					"name": "keyword.verb.cics"
				},
				{
					"match": "(\\w+\\s*)(\\()?([0-9a-zA-Z\\-\\s\"']+)?(\\))?",
					"captures": {
						"1": {
							"name": "meta.symbol.cobol.cics string.quoted.cobol.cics"
						},
						"2": {
							"name": "keyword.bracket.cobol"
						},
						"3": {
							"name": "variable.cobol"
						},
						"4": {
							"name": "keyword.bracket.cobol"
						}
					}
				}
			],
			"end": "(?i:end\\-exec)",
			"endCaptures": {
				"0": {
					"name": "meta.symbol.cobol.cics string.quoted.cobol.cics"
				}
			}
		},
		{
			"begin": "(?i:exec\\s+sqlims)",
			"name": "string.quoted.cobol.sqlims",
			"patterns": [
				{
					"match": "(\\:([a-zA-Z\\-])*)",
					"name": "variable.cobol"
				},
				{
					"include": "source.sql"
				}
			],
			"end": "(?i:end\\-exec)"
		},
		{
			"match": "(?<![-_])(?i:jnienvptr|json\\s+generate|json|json-code|end-json|name\\s+of)(?=\\s|\\.|$)",
			"name": "keyword.json.cobol"
		},
		{
			"match": "(?<![-_])(?i:basis|insert|eject|skip1|skip2|skip3|suppress|title)(?=\\s|\\.|$)",
			"name": "keyword.listing.cobol"
		},
		{
			"match": "(?<![-_])(?i:reload|more-labels|ready|trace|service|exhibit|reset|named)(?=\\s|\\.|$)",
			"name": "invalid.deprecated.cobol"
		},
		{
			"match": "(?<![-_])(?i:alphabet|password|padding|native|ebcdic|standard-1|standard-2|symbolic|rounded|symbol|upsi-[0-7])(?=\\s|\\.|$)",
			"name": "keyword.verb.special.cobol"
		},
		{
			"begin": "(?i:remarks)",
			"beginCaptures": {
				"0": {
					"name": "keyword.cobol"
				}
			},
			"name": "comment.block.cobol.remark",
			"end": "(?i:environment\\s+division|data\\s+division|working-storage\\s+section)",
			"endCaptures": {
				"0": {
					"name": "keyword.cobol"
				}
			}
		},
		{
			"match": "(?<![-_])(?i:alter|chaining)(?=\\s|\\.)",
			"name": "invalid.illegal.cobol"
		},
		{
			"match": "(?i:filler)",
			"name": "keyword.filler.cobol"
		},
		{
			"match": "(?<![-_])(?i:date|day-of-week|day|debug-content|debug-line|debug-item|debug-sub-1|debug-sub-2|debug-sub-3|shift-in|shift-out|tally|time|when-compiled|line-counter|page-counter|return-code|linage-counter|debug-line|debug-name|debug-contents)(?=\\s+|\\.|$)",
			"name": "variable.language"
		},
		{
			"match": "(^[0-9][0-9][0-9][0-9][0-9][0-9])",
			"name": "constant.numeric.integer"
		},
		{
			"match": "([0-9a-zA-Z][a-zA-Z\\-0-9]+)",
			"name": "meta.symbol.cobol"
		},
		{
			"match": "(?<![-_])(?i:same|merge|sort|sort-merge|sort-control|sort-core-size|sort-file-size|sort-message|sort-mode-size|sort-return|order)",
			"name": "keyword.cobol.sort"
		},
		{
			"match": "(?<![-_])(?i:ending|beginning|code|data-pointer|com-reg|validate|unlock|column|plus|end-accept|purge|end-receive|end-display|interface|interface-id|cobol|retry|terminate|disable|send|enable)",
			"name": "keyword.reserved.cobol"
		},
		{
			"match": "(?<![-_])(?i:copy|replace)",
			"name": "keyword.compiler.cobol"
		},
		{
			"match": "(?<![-_])(?i:function)\\s+(?i:acos|annuity|asin|atan|char|cos|current-date|date-of-integer|date-to-yyyymmdd|day-of-integer|day-to-yyyyddd|display-of|factorial|integer|integer-of-date|integer-of-day|integer-part|length|log|log10|lower-case|max|mean|median|midrange|min|mod|national-of|numval|numval-c|ord|ord-max|ord-min|present-value|random|range|rem|reverse|sin|sqrt|standard-deviation|sum|tan|upos|upper-case|usubstr|usupplementary|uvalid|uwidth|variance|when-compiled|year-to-yyyy)",
			"name": "keyword.intrinsicfunctions.cobol"
		},
		{
			"match": "(?<![-_])(?i:end-xml|processing\\s+procedure|xml\\s+parse|xml|xml-information|xml-text|xml-schema|xml-ntext|xml-namespace|xml-namespace-prefix|xml-event|xml-code|xml-nnamespace-prefix|xml-nnamespace|generate|type)(?=\\s|\\.|$)",
			"name": "keyword.xml.cobol"
		}
	],
	"scopeName": "source.entcobol"
}